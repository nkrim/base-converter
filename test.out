
/=====================================================================\
| Base Converter                                                      |
+---------------------------------------------------------------------+
| Instructions:                                                       |
| - Enter a number in binary, octal, decimal, or hexadecimal.         |
| - To select the input base, either:                                 |
|   - Select the base to convert from after entering your number.     |
|   - Or include "b:", "o:", "d:", or "h:" before your initial input. |
| - Enter "help" at any time to view these instructions.              |
| - Enter "q" at any time to quit.                                    |
+---------------------------------------------------------------------+
| Examples:                                                           |
| - from binary                                                       |
|  > 1001101     (then enter "b" to select binary)                    |
|  > 0b0110                                                           |
|  > b: 1101                                                          |
|  > b: -010                                                          |
| - from octal                                                        |
|  > 7426301     (then enter "o" to select octal)                     |
|  > 0o2305                                                           |
|  > o: 3042                                                          |
|  > o: -765                                                          |
| - from decimal                                                      |
|  > 2318394     (then enter "d" to select decimal)                   |
|  > 4,292                                                            |
|  > d: 3042                                                          |
|  > d: -127                                                          |
| - from hexadecimal                                                  |
|  > 0384028     (then enter "h" to select hexadecimal)               |
|  > fF29cD0                                                          |
|  > 0x1241                                                           |
|  > h: 8F8B                                                          |
|  > h: -abc                                                          |
| - conversion results can be reused as input by entering "`base`:"   |
|  > b:          (previous binary output used as input)               |
|  > d:          (previous decimal output used as input)              |
|  > s:          (previous signed decimal output used as input)       |
|  > h: -        (previous hex output NEGATED and then used as input) |
| - instructions                                                      |
|  > help                                                             |
| - quit                                                              |
|  > q                                                                |
\=====================================================================/

> b: 0

From binary: 0
- octal       -> 0
- hexadecimal -> 0
- decimal     -> 0
- signed dec  -> 0

> b: 0001

From binary: 0001
- octal       -> 1
- hexadecimal -> 1
- decimal     -> 1
- signed dec  -> 1

> b: 1010

From binary: 1010
- octal       -> 12
- hexadecimal -> A
- decimal     -> 10
- signed dec  -> -6

> b: 1111 1111

From binary: 11111111
- octal       -> 377
- hexadecimal -> FF
- decimal     -> 255
- signed dec  -> -1

> b: 1000 0000

From binary: 10000000
- octal       -> 200
- hexadecimal -> 80
- decimal     -> 128
- signed dec  -> -128

> b: -01010101

From binary: -01010101 -> 10101011
- octal       -> 253
- hexadecimal -> AB
- decimal     -> 171
- signed dec  -> -85

> b: 10000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000

From binary: 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
- octal       -> 4000000000000000000000000000000000000000000
- hexadecimal -> 100000000000000000000000000000000
- decimal     -> 340282366920938463463374607431768211456
- signed dec  -> -340282366920938463463374607431768211456

> b: 111101110101101010110101100101010001010100101011010101010010010101011010101001001010101101010101

From binary: 111101110101101010110101100101010001010100101011010101010010010101011010101001001010101101010101
- octal       -> 75655265452124532522253251125525
- hexadecimal -> F75AB595152B55255AA4AB55
- decimal     -> 76552458248061221506969283413
- signed dec  -> -2675704266203116086574666923

> b: 1010 1012
Invalid binary input.
Binary input consists of only 0s and 1s.

> o: 0

From octal: 0
- binary      -> 000
- hexadecimal -> 0
- decimal     -> 0
- signed dec  -> 0

> o: 7

From octal: 7
- binary      -> 111
- hexadecimal -> 7
- decimal     -> 7
- signed dec  -> -1

> o: 10

From octal: 10
- binary      -> 001000
- hexadecimal -> 8
- decimal     -> 8
- signed dec  -> 8

> o: 17

From octal: 17
- binary      -> 001111
- hexadecimal -> F
- decimal     -> 15
- signed dec  -> 15

> o: -17

From octal: -17 -> 61
- binary      -> 110001
- hexadecimal -> 31
- decimal     -> 49
- signed dec  -> -15

> o: -61

From octal: -61 -> 17
- binary      -> 001111
- hexadecimal -> F
- decimal     -> 15
- signed dec  -> 15

> o: 77777

From octal: 77777
- binary      -> 111111111111111
- hexadecimal -> 7FFF
- decimal     -> 32767
- signed dec  -> -1

> o: 12345677654321

From octal: 12345677654321
- binary      -> 001010011100101110111111110101100011010001
- hexadecimal -> A72EFF58D1
- decimal     -> 718048024785
- signed dec  -> 718048024785

> o: 76543211234567765432112345677654321123456776543211234567

From octal: 76543211234567765432112345677654321123456776543211234567
- binary      -> 111110101100011010001001010011100101110111111110101100011010001001010011100101110111111110101100011010001001010011100101110111111110101100011010001001010011100101110111
- hexadecimal -> FAC6894E5DFEB1A253977FAC6894E5DFEB1A253977
- decimal     -> 366508851534184157512882785759736812995522544875895
- signed dec  -> -7635567622526989547260531415631640036396186125961

> o: 12345678
Invalid octal input.
Octal input consists of numerical digits in the range [0 - 7].

> h: 0

From hexadecimal: 0
- binary      -> 0000
- octal       -> 0
- decimal     -> 0
- signed dec  -> 0

> h: f

From hexadecimal: F
- binary      -> 1111
- octal       -> 17
- decimal     -> 15
- signed dec  -> -1


> h: FFFFFFFF

From hexadecimal: FFFFFFFF
- binary      -> 11111111111111111111111111111111
- octal       -> 37777777777
- decimal     -> 4294967295
- signed dec  -> -1

> h: 8000 0000

From hexadecimal: 80000000
- binary      -> 10000000000000000000000000000000
- octal       -> 20000000000
- decimal     -> 2147483648
- signed dec  -> -2147483648

> h: -8000 0000

From hexadecimal: -80000000 -> 80000000
- binary      -> 10000000000000000000000000000000
- octal       -> 20000000000
- decimal     -> 2147483648
- signed dec  -> -2147483648

> h: -0

From hexadecimal: -0 -> 0
- binary      -> 0000
- octal       -> 0
- decimal     -> 0
- signed dec  -> 0

> h: -0000 0001

From hexadecimal: -00000001 -> FFFFFFFF
- binary      -> 11111111111111111111111111111111
- octal       -> 37777777777
- decimal     -> 4294967295
- signed dec  -> -1

> h: FEDCBA98765432100123456789ABCDEF

From hexadecimal: FEDCBA98765432100123456789ABCDEF
- binary      -> 11111110110111001011101010011000011101100101010000110010000100000000000100100011010001010110011110001001101010111100110111101111
- octal       -> 3766713523035452062040004432126361152746757
- decimal     -> 338770000845734292516042252062085074415
- signed dec  -> -1512366075204170947332355369683137041

> h: -

From hexadecimal: -FEDCBA98765432100123456789ABCDEF -> 0123456789ABCDEFFEDCBA9876543211
- binary      -> 00000001001000110100010101100111100010011010101111001101111011111111111011011100101110101001100001110110010101000011001000010001
- octal       -> 11064254742325715737773345651416625031021
- decimal     -> 1512366075204170947332355369683137041
- signed dec  -> 1512366075204170947332355369683137041

> h: FFFFG
Invalid hexadecimal input.
Hexadecimal input consists of numerical digits and letters in the range [A - F].

> d: 0

From decimal: 0
- binary      -> 0
- octal       -> 0
- hexadecimal -> 0

> d: 9

From decimal: 9
- binary      -> 1001
- octal       -> 11
- hexadecimal -> 9

> d: 100000

From decimal: 100000
- binary      -> 11000011010100000
- octal       -> 303240
- hexadecimal -> 186A0

> d: -100000

From decimal: -100000
- binary      -> 100111100101100000
- octal       -> 474540
- hexadecimal -> E7960

> d: 1,234,567,890,123,456,789,012,345,678,901,234,567,890,123,456,789,012,345,678,901,234,567,890

From decimal: 1234567890123456789012345678901234567890123456789012345678901234567890
- binary      -> 10110111001010111011000100110000101101111101000010011010001001001101110110011001000100001110011011101000101111000101100010111111000010110101110110100110011000110010111010110011001111111100011001011011001110001111110000101011010010
- octal       -> 26712730460557502321115663104163350570542770265664630627263177431331617605322
- hexadecimal -> 2DCAEC4C2DF4268937664439BA2F162FC2D76998CBACCFF196CE3F0AD2

> d: -

From decimal: -1234567890123456789012345678901234567890123456789012345678901234567890
- binary      -> 101001000110101000100111011001111010010000010111101100101110110110010001001100110111011110001100100010111010000111010011101000000111101001010001001011001100111001101000101001100110000000011100110100100110001110000001111010100101110
- octal       -> 51065047317220275456662114673614427207235007512113147150514600346446160172456
- hexadecimal -> D23513B3D20BD976C899BBC645D0E9D03D2896673453300E6931C0F52E

> d: 01234A
Invalid decimal input.
Decimal input consists of numerical digits.


> d: 4294967296

From decimal: 4294967296
- binary      -> 100000000000000000000000000000000
- octal       -> 40000000000
- hexadecimal -> 100000000

> d: -

From decimal: -4294967296
- binary      -> 100000000000000000000000000000000
- octal       -> 40000000000
- hexadecimal -> F00000000

> h: 

From hexadecimal: F00000000
- binary      -> 111100000000000000000000000000000000
- octal       -> 740000000000
- decimal     -> 64424509440
- signed dec  -> -4294967296

> d: 2147483647

From decimal: 2147483647
- binary      -> 1111111111111111111111111111111
- octal       -> 17777777777
- hexadecimal -> 7FFFFFFF

> d: -

From decimal: -2147483647
- binary      -> 10000000000000000000000000000001
- octal       -> 60000000001
- hexadecimal -> 80000001

> h: FFFFEEEEDDDDCCCCBBBBAAAA9999888877776666555544443333222211110000

From hexadecimal: FFFFEEEEDDDDCCCCBBBBAAAA9999888877776666555544443333222211110000
- binary      -> 1111111111111111111011101110111011011101110111011100110011001100101110111011101110101010101010101001100110011001100010001000100001110111011101110110011001100110010101010101010101000100010001000011001100110011001000100010001000010001000100010000000000000000
- octal       -> 17777773567335673463145673565252514631421041673566314625252504210314631042102104200000
- decimal     -> 115791971445714519661311201614588054148727523110761831921185882415803053178880
- signed dec  -> -117791601675762259783394099853704542461554878732118271701592110076461056

> o:

From octal: 17777773567335673463145673565252514631421041673566314625252504210314631042102104200000
- binary      -> 001111111111111111111011101110111011011101110111011100110011001100101110111011101110101010101010101001100110011001100010001000100001110111011101110110011001100110010101010101010101000100010001000011001100110011001000100010001000010001000100010000000000000000
- hexadecimal -> FFFFEEEEDDDDCCCCBBBBAAAA9999888877776666555544443333222211110000
- decimal     -> 115791971445714519661311201614588054148727523110761831921185882415803053178880
- signed dec  -> 115791971445714519661311201614588054148727523110761831921185882415803053178880

> h:

From hexadecimal: FFFFEEEEDDDDCCCCBBBBAAAA9999888877776666555544443333222211110000
- binary      -> 1111111111111111111011101110111011011101110111011100110011001100101110111011101110101010101010101001100110011001100010001000100001110111011101110110011001100110010101010101010101000100010001000011001100110011001000100010001000010001000100010000000000000000
- octal       -> 17777773567335673463145673565252514631421041673566314625252504210314631042102104200000
- decimal     -> 115791971445714519661311201614588054148727523110761831921185882415803053178880
- signed dec  -> -117791601675762259783394099853704542461554878732118271701592110076461056

> d:

From decimal: 115791971445714519661311201614588054148727523110761831921185882415803053178880
- binary      -> 1111111111111111111011101110111011011101110111011100110011001100101110111011101110101010101010101001100110011001100010001000100001110111011101110110011001100110010101010101010101000100010001000011001100110011001000100010001000010001000100010000000000000000
- octal       -> 17777773567335673463145673565252514631421041673566314625252504210314631042102104200000
- hexadecimal -> FFFFEEEEDDDDCCCCBBBBAAAA9999888877776666555544443333222211110000

> h:

From hexadecimal: FFFFEEEEDDDDCCCCBBBBAAAA9999888877776666555544443333222211110000
- binary      -> 1111111111111111111011101110111011011101110111011100110011001100101110111011101110101010101010101001100110011001100010001000100001110111011101110110011001100110010101010101010101000100010001000011001100110011001000100010001000010001000100010000000000000000
- octal       -> 17777773567335673463145673565252514631421041673566314625252504210314631042102104200000
- decimal     -> 115791971445714519661311201614588054148727523110761831921185882415803053178880
- signed dec  -> -117791601675762259783394099853704542461554878732118271701592110076461056

> s:

From decimal: -117791601675762259783394099853704542461554878732118271701592110076461056
- binary      -> 1011101110111011011101110111011100110011001100101110111011101110101010101010101001100110011001100010001000100001110111011101110110011001100110010101010101010101000100010001000011001100110011001000100010001000010001000100010000000000000000
- octal       -> 73567335673463145673565252514631421041673566314625252504210314631042102104200000
- hexadecimal -> EEEEDDDDCCCCBBBBAAAA9999888877776666555544443333222211110000

> h:

From hexadecimal: EEEEDDDDCCCCBBBBAAAA9999888877776666555544443333222211110000
- binary      -> 111011101110111011011101110111011100110011001100101110111011101110101010101010101001100110011001100010001000100001110111011101110110011001100110010101010101010101000100010001000011001100110011001000100010001000010001000100010000000000000000
- octal       -> 73567335673463145673565252514631421041673566314625252504210314631042102104200000
- decimal     -> 1649055463102622069799903400889213973365929018143500686420014091216158720
- signed dec  -> -117791601675762259783394099853704542461554878732118271701592110076461056

> q